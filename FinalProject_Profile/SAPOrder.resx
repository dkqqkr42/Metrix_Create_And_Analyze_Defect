<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Select.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column11.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>