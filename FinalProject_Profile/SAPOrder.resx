<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Decide.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CJogj//Z
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column11.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>